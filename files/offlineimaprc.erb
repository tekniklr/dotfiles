# Sample configuration file
# Copyright (C) 2002 John Goerzen
# <jgoerzen@complete.org>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Looking for a quick start?  Take a look at offlineimap.conf.minimal.


##################################################
# General definitions
##################################################

[general]
metadata = ~/.offlineimap
accounts = gmail
maxsyncaccounts = 1
ui = Noninteractive.Basic
ignore-readonly = no

##################################################
# Accounts
##################################################

[Account dreamhost]
localrepository = dreamhost_local
remoterepository = dreamhost_remote

[Repository dreamhost_local]
type = Maildir
localfolders = ~/Maildir.dreamhost
sep = .

[Repository dreamhost_remote]
type = IMAP
preauthtunnel = /usr/bin/ssh -x tekniklr@tekniklr.com '/home/tekniklr/prog/sbin/dovecot --exec-mail imap'
maxconnections = 1
holdconnectionopen = no
nametrans = lambda foldername: re.sub('^', '.', foldername)
folderfilter = lambda foldername: foldername not in ['.INBOX', 'INBOX']

[Account gmail]
localrepository = gmail_local
remoterepository = gmail_remote

[Repository gmail_local]
type = Maildir
localfolders = ~/backup/email_backups/
sep = .

[Repository gmail_remote]
type = IMAP
remotehost = imap.gmail.com
remoteuser = <%= print("Gmail username: "); STDOUT.flush; STDIN.gets.chomp %>
remotepass = <%= print("Gmail password: "); STDOUT.flush; STDIN.gets.chomp %>
ssl = yes
nametrans = lambda foldername: re.sub('^INBOX$', '0:Inbox', re.sub('^\[Gmail\]/', 'XX:', foldername))
maxconnections = 1
